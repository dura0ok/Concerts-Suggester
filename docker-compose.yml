version: '3'
services:
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-123321}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-concert-suggester}
      MONGO_APP_USERNAME: ${MONGO_APP_USERNAME:-durachok}
      MONGO_APP_PASSWORD: ${MONGO_APP_PASSWORD:-123321}
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-123321}
      PROJECT_USER_NAME: ${PROJECT_USER_NAME:-durachok}
      PROJECT_USER_PASSWORD: ${PROJECT_USER_PASSWORD:-123321}
      PROJECT_USER_DATABASE_NAME: ${PROJECT_USER_DATABASE_NAME:-concert-suggester}
    ports:
      - "0.0.0.0:5432:5432"
    volumes:
      - ./init.sh:/docker-entrypoint-initdb.d/init.sh
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres-data:/var/lib/postgresql/data

  redis:
    image: redis
    ports:
      - "6379:6379"
    command: >
          --requirepass ${REDIS_PASSWORD:-123321}


  adminer:
    image: adminer
    ports:
      - "8080:8080"

  elasticsearch:
    image: elasticsearch:8.12.2
    volumes:
        - ./russian-cities.json:/data/russian-cities.json
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"

  logstash:
    image: logstash:8.12.2
    volumes:
      - ./logstash/config/logstash.conf:/usr/share/logstash/config/logstash.conf
    command: logstash -f /usr/share/logstash/config/logstash.conf
    depends_on:
      - elasticsearch

  # kibana:
  #   image: kibana:8.12.2
  #   ports:
  #     - "5601:5601"
  #   depends_on:
  #     - elasticsearch